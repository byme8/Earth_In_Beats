//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectRequest", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class ConnectRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DeviceKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceKey {
            get {
                return this.DeviceKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceKeyField, value) != true)) {
                    this.DeviceKeyField = value;
                    this.RaisePropertyChanged("DeviceKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.DisconnectResponce))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.GetAllResponce))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.UpdateResponce))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.PlayResponce))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.StopResponce))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.ConnectResponce))]
    public partial class Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisconnectResponce", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class DisconnectResponce : Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.Result {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllResponce", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class GetAllResponce : Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.Result {
        
        private System.Collections.ObjectModel.ObservableCollection<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.DeviceData> DevicesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.DeviceData> Devices {
            get {
                return this.DevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.DevicesField, value) != true)) {
                    this.DevicesField = value;
                    this.RaisePropertyChanged("Devices");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateResponce", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class UpdateResponce : Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.Result {
        
        private Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.DeviceContextData DeviceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.DeviceContextData Device {
            get {
                return this.DeviceField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceField, value) != true)) {
                    this.DeviceField = value;
                    this.RaisePropertyChanged("Device");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayResponce", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class PlayResponce : Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.Result {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StopResponce", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class StopResponce : Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.Result {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectResponce", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class ConnectResponce : Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.Result {
        
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceData", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Models")]
    public partial class DeviceData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.TrackData CurrentTrackField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private System.Guid PublicKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.TrackData CurrentTrack {
            get {
                return this.CurrentTrackField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentTrackField, value) != true)) {
                    this.CurrentTrackField = value;
                    this.RaisePropertyChanged("CurrentTrack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PublicKey {
            get {
                return this.PublicKeyField;
            }
            set {
                if ((this.PublicKeyField.Equals(value) != true)) {
                    this.PublicKeyField = value;
                    this.RaisePropertyChanged("PublicKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackData", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Models")]
    public partial class TrackData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ArtistField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceContextData", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Models")]
    public partial class DeviceContextData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IdField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisconnectRequest", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class DisconnectRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllRequest", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class GetAllRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateRequst", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class UpdateRequst : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IdField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayRequest", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class PlayRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ArtistField;
        
        private System.Guid IdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StopRequest", Namespace="http://schemas.datacontract.org/2004/07/Earth_In_Beats.WebService.WCF.Contracts")]
    public partial class StopRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Earth_in_Beats.WebService.PlayerService")]
    public interface PlayerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlayerService/Connect", ReplyAction="http://tempuri.org/PlayerService/ConnectResponse")]
        System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.ConnectResponce> ConnectAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.ConnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlayerService/Disconnect", ReplyAction="http://tempuri.org/PlayerService/DisconnectResponse")]
        System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.DisconnectResponce> DisconnectAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.DisconnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlayerService/Get", ReplyAction="http://tempuri.org/PlayerService/GetResponse")]
        System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.GetAllResponce> GetAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.GetAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlayerService/Update", ReplyAction="http://tempuri.org/PlayerService/UpdateResponse")]
        System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.UpdateResponce> UpdateAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.UpdateRequst request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlayerService/Play", ReplyAction="http://tempuri.org/PlayerService/PlayResponse")]
        System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.PlayResponce> PlayAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.PlayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlayerService/Stop", ReplyAction="http://tempuri.org/PlayerService/StopResponse")]
        System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.StopResponce> StopAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.StopRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PlayerServiceChannel : Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.PlayerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerServiceClient : System.ServiceModel.ClientBase<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.PlayerService>, Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.PlayerService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PlayerServiceClient() : 
                base(PlayerServiceClient.GetDefaultBinding(), PlayerServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_PlayerService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlayerServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(PlayerServiceClient.GetBindingForEndpoint(endpointConfiguration), PlayerServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlayerServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PlayerServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlayerServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PlayerServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlayerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.ConnectResponce> ConnectAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.ConnectRequest request) {
            return base.Channel.ConnectAsync(request);
        }
        
        public System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.DisconnectResponce> DisconnectAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.DisconnectRequest request) {
            return base.Channel.DisconnectAsync(request);
        }
        
        public System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.GetAllResponce> GetAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.GetAllRequest request) {
            return base.Channel.GetAsync(request);
        }
        
        public System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.UpdateResponce> UpdateAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.UpdateRequst request) {
            return base.Channel.UpdateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.PlayResponce> PlayAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.PlayRequest request) {
            return base.Channel.PlayAsync(request);
        }
        
        public System.Threading.Tasks.Task<Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.StopResponce> StopAsync(Earth_In_Beats.WebService.IntegrationTests.Earth_in_Beats.WebService.StopRequest request) {
            return base.Channel.StopAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_PlayerService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_PlayerService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:65118/PlayerService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return PlayerServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_PlayerService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return PlayerServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_PlayerService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_PlayerService,
        }
    }
}
